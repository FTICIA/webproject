const express = require('express');
const helmet = require('helmet');
const app = express();

// Comprehensive Helmet configuration for security headers
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      scriptSrc: ["'self'", "'unsafe-inline'", "https://cdnjs.cloudflare.com"],
      styleSrc: ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com"],
      imgSrc: ["'self'", "data:", "https://secure.example.com"],
      connectSrc: ["'self'"],
      fontSrc: ["'self'", "https://fonts.gstatic.com"],
      objectSrc: ["'none'"],
      mediaSrc: ["'self'"],
      frameSrc: ["'none'"],
      upgradeInsecureRequests: []
    }
  },
  xssFilter: true,
  hsts: {
    maxAge: 31536000,
    includeSubDomains: true,
    preload: true
  },
  noSniff: true,
  referrerPolicy: { policy: 'same-origin' },
  frameguard: { action: 'deny' }
}));

// Additional security middleware
app.use(helmet.permittedCrossDomainPolicies());
app.use(helmet.dnsPrefetchControl());
app.use(helmet.expectCt({ 
  enforce: true, 
  maxAge: 30 
}));

module.exports = app;